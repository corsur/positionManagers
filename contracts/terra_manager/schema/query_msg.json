{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "get_strategy_manager_addr"
      ],
      "properties": {
        "get_strategy_manager_addr": {
          "type": "object",
          "required": [
            "strategy_type"
          ],
          "properties": {
            "strategy_type": {
              "$ref": "#/definitions/StrategyType"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "DeltaNeutralParams": {
      "type": "object",
      "required": [
        "collateral_ratio_in_percentage",
        "mirror_asset_cw20_addr",
        "position_id"
      ],
      "properties": {
        "collateral_ratio_in_percentage": {
          "$ref": "#/definitions/Uint128"
        },
        "mirror_asset_cw20_addr": {
          "type": "string"
        },
        "position_id": {
          "$ref": "#/definitions/Uint128"
        }
      }
    },
    "StrategyType": {
      "description": "Enum represents individual strategy. When new strategies are added, they must be added here to be used by smart contracts.",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "DeltaNeutral"
          ],
          "properties": {
            "DeltaNeutral": {
              "$ref": "#/definitions/DeltaNeutralParams"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
